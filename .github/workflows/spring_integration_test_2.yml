name: Spring Integration Test2
env:
  projectSpringBootVersion: 2.2.0.RELEASE
  sermantVersion: 1.0.0
on:
  push:
  pull_request:
    branches:
      - '*'
    paths:
      - 'sermant-agentcore/**'
      - 'sermant-integration-tests/**'
      - 'sermant-plugins/sermant-router/**'
      - 'sermant-plugins/sermant-service-registry/**'
      - 'sermant-plugins/sermant-springboot-registry/**'
      - '.github/workflows/spring_integration*.yml'
      - '.github/actions/**'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  download-midwares-and-cache:
    name: download midwares and cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: cache local cse
        uses: actions/cache@v3
        with:
          path: Local-CSE-2.1.3-linux-amd64.zip
          key: ${{ runner.os }}-local-cse
          restore-keys: |
            ${{ runner.os }}-local-cse
      - name: download cse
        run: |
          export ROOT_PATH=$(pwd)
          bash ./sermant-integration-tests/scripts/tryDownloadMidware.sh cse
      - name: cache zookeeper
        uses: actions/cache@v3
        with:
          path: apache-zookeeper-3.6.3-bin.tar.gz
          key: ${{ runner.os }}-apache-zookeeper-3.6.3
          restore-keys: |
            ${{ runner.os }}-apache-zookeeper-3.6.3
      - name: download zookeeper
        run: |
          export ROOT_PATH=$(pwd)
          bash ./sermant-integration-tests/scripts/tryDownloadMidware.sh zk
      - name: cache nacos server
        uses: actions/cache@v3
        with:
          path: nacos-server-1.4.2.tar.gz
          key: ${{ runner.os }}-nacos-server-1.4.2
          restore-keys: |
            ${{ runner.os }}-nacos-server-1.4.2
      - name: download nacos
        run: |
          export ROOT_PATH=$(pwd)
          bash ./sermant-integration-tests/scripts/tryDownloadMidware.sh nacos
  build-agent-and-cache:
    name: build agent and cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: cache agent
        uses: actions/cache@v3
        with:
          path: sermant-agent-*/
          key: ${{ runner.os }}-agent-${{ github.run_id }}
      - name: package agent
        run: |
          sed -i '/sermant-backend/d' pom.xml
          sed -i '/sermant-backend-lite/d' pom.xml
          sed -i '/sermant-integration-tests/d' pom.xml
          sed -i '/sermant-injector/d' pom.xml
          mvn package -DskipTests -Ptest --file pom.xml
  test-for-spring:
    name: Test for spring
    runs-on: ubuntu-latest
    needs: [ build-agent-and-cache, download-midwares-and-cache ]
    strategy:
      matrix:
        include:
          - springBootVersion: "3.0.4"
            springCloudVersion: "2022.0.0"
          - springBootVersion: "3.0.8"
            springCloudVersion: "2022.0.1"
            httpClientVersion: "4.1.3"
          - springBootVersion: "3.0.12"
            springCloudVersion: "2022.0.2"
            httpClientVersion: "4.2.6"
          - springBootVersion: "3.1.4"
            springCloudVersion: "2022.0.3"
            httpClientVersion: "4.3.6"
          - springBootVersion: "3.1.8"
            springCloudVersion: "2022.0.4"
            httpClientVersion: "4.4.1"
          - springBootVersion: "3.1.12"
            springCloudVersion: "2022.0.5"
            httpClientVersion: "4.5.6"
          - springBootVersion: "3.2.4"
            springCloudVersion: "2023.0.0"
            httpClientVersion: "4.5.10"
          - springBootVersion: "3.2.8"
            springCloudVersion: "2023.0.1"
            httpClientVersion: "4.5.13"
          - springBootVersion: "3.3.0"
            springCloudVersion: "2023.0.2"
            httpClientVersion: "4.5.13"
          - springBootVersion: "3.3.5"
            springCloudVersion: "2023.0.3"
            httpClientVersion: "4.5.13"
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - name: set java version to environment
        run: |
          echo "javaVersion=21" >> $GITHUB_ENV
      - name: common operations
        uses: ./.github/actions/common/spring
      - name: (spring router) test for springboot=${{ matrix.springBootVersion }} springCloudVersion=${{ matrix.springCloudVersion }}
        if: env.enableSpringRouter == 'true'
        uses: ./.github/actions/scenarios/spring/router/spring-router
      - name: (spring tag router) test for springboot=${{ matrix.springBootVersion }} springCloudVersion=${{ matrix.springCloudVersion }}
        if: env.enableSpringTagRouter == 'true'
        uses: ./.github/actions/scenarios/spring/router/spring-tag-router
      - name: (spring tag az router) test for springboot=${{ matrix.springBootVersion }} springCloudVersion=${{ matrix.springCloudVersion }}
        if: env.enableSpringTagRouter == 'true'
        uses: ./.github/actions/scenarios/spring/router/spring-tag-az-router
      - name: (spring lane) test for springboot=${{ matrix.springBootVersion }} springCloudVersion=${{ matrix.springCloudVersion }}
        if: env.enableSpringLane == 'true'
        uses: ./.github/actions/scenarios/spring/lane
